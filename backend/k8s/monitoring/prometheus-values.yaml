# # Prometheus Stack Configuration
# # Optimized for 7.8GB RAM server with 2 days retention
# # Features:
# # - Node Exporter (full system metrics)
# # - Database query monitoring
# # - Load Balancer (Traefik) metrics
# # - Application metrics (NestJS services)
# # - Service health and request tracking


nameOverride: "kube-prometheus-stack"
fullnameOverride: "kube-prometheus-stack"

prometheus:
  enabled: true
  service:
    type: NodePort
    nodePort: 30090
  
  prometheusSpec:
    retention: 2d
    retentionSize: "10GB"
    
    resources:
      requests:
        cpu: 150m
        memory: 512Mi
      limits:
        cpu: 600m
        memory: 1024Mi

    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: local-path
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi

    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    scrapeInterval: 15s
    evaluationInterval: 30s

    externalLabels:
      cluster: "pose-cluster"
      environment: "prod"

    # Scrape external exporters + custom NestJS microservices
    additionalScrapeConfigs:
      - job_name: 'mysql'
        static_configs:
          - targets: ['mysql-exporter:9104']
        relabel_configs:
          - source_labels: [__address__]
            target_label: instance
            replacement: 'mysql-db'

      - job_name: 'redis'
        static_configs:
          - targets: ['redis-exporter.pose-microservices:9121']
        relabel_configs:
          - source_labels: [__address__]
            target_label: instance
            replacement: 'redis-cache'

      # ðŸŸ¢ Add NestJS Microservice Metrics
      - job_name: 'nestjs-item-service'
        metrics_path: '/metrics'
        static_configs:
          - targets: ['item-service.pose-microservices:9102']

      - job_name: 'nestjs-auth-service'
        metrics_path: '/metrics'
        static_configs:
          - targets: ['auth-service.pose-microservices:9101']

      - job_name: 'nestjs-gateway-service'
        metrics_path: '/metrics'
        static_configs:
          - targets: ['gateway-service.pose-microservices:3000']

      - job_name: 'nestjs-category-service'
        metrics_path: '/metrics'
        static_configs:
          - targets: ['category-service.pose-microservices:9105']

grafana:
  enabled: true
  adminPassword: "admin123"
  defaultDashboardsTimezone: "Asia/Bangkok"

  grafana.ini:
    server:
      root_url: "%(protocol)s://%(domain)s:%(http_port)s/"
    date_formats:
      default_timezone: "Asia/Bangkok"
    analytics:
      reporting_enabled: false
      check_for_updates: false
  
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 300m
      memory: 384Mi

  persistence:
    enabled: true
    storageClassName: local-path
    size: 3Gi

  initChownData:
    enabled: false

  sidecar:
    dashboards:
      enabled: true
      defaultDashboardsEnabled: true
    datasources:
      enabled: true
      defaultDatasourceEnabled: true

  service:
    type: NodePort
    nodePort: 30001
    port: 80

alertmanager:
  enabled: true
  alertmanagerSpec:
    resources:
      requests:
        cpu: 25m
        memory: 64Mi
      limits:
        cpu: 150m
        memory: 128Mi
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: local-path
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 1Gi

prometheus-node-exporter:
  enabled: true
  hostNetwork: false
  hostPID: true
  hostRootFsMount:
    enabled: true

  service:
    port: 9100
    targetPort: 9100
  
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 150m
      memory: 128Mi

  extraArgs:
    - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
    - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
    - --collector.netclass.ignored-devices=^(veth.*|docker.*|br-.*|lo)$
    - --collector.netdev.device-exclude=^(veth.*|docker.*|br-.*)$
    - --collector.processes
    - --collector.systemd
    - --collector.tcpstat

  prometheus:
    monitor:
      enabled: true
      interval: 30s

kube-state-metrics:
  enabled: true
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 128Mi

prometheusOperator:
  enabled: true
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 128Mi

defaultRules:
  create: true
  rules:
    alertmanager: true
    general: true
    node: true
    prometheus: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    network: true

kubeControllerManager:
  enabled: false
kubeEtcd:
  enabled: false
kubeScheduler:
  enabled: false
kubeProxy:
  enabled: false
