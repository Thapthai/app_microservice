---
# PostgreSQL Exporter for Database Query Monitoring
# Monitors: queries, connections, locks, transactions, replication

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-exporter
  namespace: nline-monitoring
  labels:
    app: postgres-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-exporter
  template:
    metadata:
      labels:
        app: postgres-exporter
    spec:
      containers:
      - name: postgres-exporter
        image: prometheuscommunity/postgres-exporter:latest
        ports:
        - containerPort: 9187
          name: metrics
        env:
        # Database connection string
        # Format: postgresql://username:password@hostname:port/database?sslmode=disable
        - name: DATA_SOURCE_NAME
          valueFrom:
            secretKeyRef:
              name: postgres-exporter-secret
              key: data-source-name
        
        # Extended query monitoring
        - name: PG_EXPORTER_EXTEND_QUERY_PATH
          value: "/etc/postgres-exporter/queries.yaml"
        
        # Auto-discover databases
        - name: PG_EXPORTER_AUTO_DISCOVER_DATABASES
          value: "true"
        
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
        
        livenessProbe:
          httpGet:
            path: /
            port: 9187
          initialDelaySeconds: 30
          periodSeconds: 10
        
        readinessProbe:
          httpGet:
            path: /
            port: 9187
          initialDelaySeconds: 10
          periodSeconds: 5
        
        volumeMounts:
        - name: queries
          mountPath: /etc/postgres-exporter
      
      volumes:
      - name: queries
        configMap:
          name: postgres-exporter-queries

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-exporter
  namespace: nline-monitoring
  labels:
    app: postgres-exporter
spec:
  type: ClusterIP
  ports:
  - port: 9187
    targetPort: 9187
    protocol: TCP
    name: metrics
  selector:
    app: postgres-exporter

---
# ServiceMonitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: postgres-exporter
  namespace: nline-monitoring
  labels:
    app: postgres-exporter
spec:
  selector:
    matchLabels:
      app: postgres-exporter
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics

---
# Secret for database connection (example - need to update with real credentials)
apiVersion: v1
kind: Secret
metadata:
  name: postgres-exporter-secret
  namespace: nline-monitoring
type: Opaque
stringData:
  # Update this with your actual database connection string
  # Format: postgresql://username:password@hostname:port/database?sslmode=disable
  data-source-name: "postgresql://postgres:password@your-database-host:5432/postgres?sslmode=disable"

---
# ConfigMap with custom queries for detailed monitoring
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-exporter-queries
  namespace: nline-monitoring
data:
  queries.yaml: |
    # Query execution time by database
    pg_stat_statements:
      query: |
        SELECT
          datname as database,
          usename as user,
          queryid,
          calls,
          total_exec_time,
          mean_exec_time,
          stddev_exec_time,
          min_exec_time,
          max_exec_time,
          rows
        FROM pg_stat_statements
        JOIN pg_database ON pg_stat_statements.dbid = pg_database.oid
        JOIN pg_user ON pg_stat_statements.userid = pg_user.usesysid
        WHERE datname NOT IN ('template0', 'template1')
        ORDER BY total_exec_time DESC
        LIMIT 100
      metrics:
        - database:
            usage: "LABEL"
            description: "Database name"
        - user:
            usage: "LABEL"
            description: "User name"
        - queryid:
            usage: "LABEL"
            description: "Query ID"
        - calls:
            usage: "COUNTER"
            description: "Number of times executed"
        - total_exec_time:
            usage: "COUNTER"
            description: "Total time spent executing (ms)"
        - mean_exec_time:
            usage: "GAUGE"
            description: "Mean execution time (ms)"
        - max_exec_time:
            usage: "GAUGE"
            description: "Maximum execution time (ms)"
        - rows:
            usage: "COUNTER"
            description: "Total rows retrieved or affected"
    
    # Active queries
    pg_stat_activity:
      query: |
        SELECT
          datname as database,
          usename as user,
          state,
          COUNT(*) as count
        FROM pg_stat_activity
        WHERE datname IS NOT NULL
        GROUP BY datname, usename, state
      metrics:
        - database:
            usage: "LABEL"
            description: "Database name"
        - user:
            usage: "LABEL"
            description: "User name"
        - state:
            usage: "LABEL"
            description: "Connection state"
        - count:
            usage: "GAUGE"
            description: "Number of connections"
    
    # Database size
    pg_database_size:
      query: |
        SELECT
          datname as database,
          pg_database_size(datname) as size_bytes
        FROM pg_database
        WHERE datname NOT IN ('template0', 'template1')
      metrics:
        - database:
            usage: "LABEL"
            description: "Database name"
        - size_bytes:
            usage: "GAUGE"
            description: "Database size in bytes"
    
    # Table sizes and statistics
    pg_stat_user_tables:
      query: |
        SELECT
          schemaname || '.' || relname as table_name,
          seq_scan,
          seq_tup_read,
          idx_scan,
          idx_tup_fetch,
          n_tup_ins,
          n_tup_upd,
          n_tup_del,
          n_live_tup,
          n_dead_tup
        FROM pg_stat_user_tables
        ORDER BY n_live_tup DESC
        LIMIT 50
      metrics:
        - table_name:
            usage: "LABEL"
            description: "Table name"
        - seq_scan:
            usage: "COUNTER"
            description: "Sequential scans"
        - idx_scan:
            usage: "COUNTER"
            description: "Index scans"
        - n_tup_ins:
            usage: "COUNTER"
            description: "Rows inserted"
        - n_tup_upd:
            usage: "COUNTER"
            description: "Rows updated"
        - n_tup_del:
            usage: "COUNTER"
            description: "Rows deleted"
        - n_live_tup:
            usage: "GAUGE"
            description: "Live rows"
        - n_dead_tup:
            usage: "GAUGE"
            description: "Dead rows"
    
    # Locks
    pg_locks:
      query: |
        SELECT
          datname as database,
          mode,
          COUNT(*) as count
        FROM pg_locks
        JOIN pg_database ON pg_locks.database = pg_database.oid
        GROUP BY datname, mode
      metrics:
        - database:
            usage: "LABEL"
            description: "Database name"
        - mode:
            usage: "LABEL"
            description: "Lock mode"
        - count:
            usage: "GAUGE"
            description: "Number of locks"

