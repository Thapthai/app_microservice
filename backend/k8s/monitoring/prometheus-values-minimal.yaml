# Prometheus Stack Configuration - Minimal Resources
# สำหรับ server ที่มี RAM จำกัด (1-2GB allocatable)

nameOverride: "kube-prometheus-stack"
fullnameOverride: "kube-prometheus-stack"

## Prometheus Configuration
prometheus:
  enabled: true
  
  # NodePort for external access
  service:
    type: NodePort
    nodePort: 30090
  
  prometheusSpec:
    # Reduced retention for minimal setup
    retention: 7d
    retentionSize: "5GB"
    
    # Minimal resource limits
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi
    
    # Disable storage to avoid PVC issues
    storageSpec: null
    
    # Enable service monitor discovery
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}
    
    podMonitorSelectorNilUsesHelmValues: false
    podMonitorSelector: {}
    podMonitorNamespaceSelector: {}
    
    # Scrape interval
    scrapeInterval: 1m
    evaluationInterval: 1m
    
    # External labels
    externalLabels:
      cluster: "production"
      environment: "prod"
    
    # Additional scrape configs for custom targets
    additionalScrapeConfigs:
      # MySQL Exporter (external database)
      - job_name: 'mysql'
        static_configs:
          - targets: ['mysql-exporter:9104']
        relabel_configs:
          - source_labels: [__address__]
            target_label: instance
            replacement: 'mysql-db'
      
      # Redis metrics
      - job_name: 'redis'
        static_configs:
          - targets: ['redis-exporter.pose-microservices:9121']
        relabel_configs:
          - source_labels: [__address__]
            target_label: instance
            replacement: 'redis-cache'

## Grafana Configuration
grafana:
  enabled: true
  
  # Admin credentials
  adminPassword: "admin123"
  
  # Default timezone (Thailand)
  defaultDashboardsTimezone: "Asia/Bangkok"
  
  # Grafana INI configuration
  grafana.ini:
    server:
      root_url: "%(protocol)s://%(domain)s:%(http_port)s/"
    
    date_formats:
      default_timezone: "Asia/Bangkok"
    
    analytics:
      reporting_enabled: false
      check_for_updates: false
  
  # Minimal resource limits
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  
  # Disable persistent storage
  persistence:
    enabled: false
  
  # NodePort for external access
  service:
    type: NodePort
    nodePort: 30001
    port: 80

## Alertmanager - Disabled to save resources
alertmanager:
  enabled: false

## Node Exporter - Minimal resources
prometheus-node-exporter:
  enabled: true
  
  resources:
    requests:
      cpu: 10m
      memory: 32Mi
    limits:
      cpu: 50m
      memory: 64Mi
  
  # Basic collectors only
  extraArgs:
    - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
    - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
  
  prometheus:
    monitor:
      enabled: true
      interval: 1m

## Kube State Metrics - Minimal resources
kube-state-metrics:
  enabled: true
  
  resources:
    requests:
      cpu: 10m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 128Mi

## Prometheus Operator - Minimal resources
prometheusOperator:
  enabled: true
  
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 128Mi

## Default Rules (Alerts) - Disabled to save resources
defaultRules:
  create: false

## Disable unnecessary components
kubeControllerManager:
  enabled: false

kubeEtcd:
  enabled: false

kubeScheduler:
  enabled: false

kubeProxy:
  enabled: false

## Disable CoreDNS monitoring
coreDns:
  enabled: false

## Disable kubelet monitoring
kubelet:
  enabled: false

