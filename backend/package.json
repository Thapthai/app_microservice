{
  "name": "New-linen-microservice",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"apps/**/*.ts\" \"libs/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/apps/New-linen-microservice/main",
    "start:gateway": "nest start gateway-api --watch",
    "start:auth": "nest start auth-service --watch",
    "start:item": "nest start item-service --watch",
    "start:email": "nest start email-service --watch",
    "start:category": "nest start category-service --watch",
    "start:all": "concurrently \"npm run start:auth\" \"npm run start:item\" \"npm run start:email\" \"npm run start:category\" \"npm run start:gateway\"",
    "start:gateway:prod": "node dist/apps/gateway-api/main",
    "start:auth:prod": "node dist/apps/auth-service/main",
    "start:item:prod": "node dist/apps/item-service/main",
    "start:email:prod": "node dist/apps/email-service/main",
    "start:category:prod": "node dist/apps/category-service/main",
    "build:gateway": "nest build gateway-api",
    "build:auth": "nest build auth-service",
    "build:item": "nest build item-service",
    "build:email": "nest build email-service",
    "build:category": "nest build category-service",
    "build:all": "nest build gateway-api && nest build auth-service && nest build item-service && nest build email-service && nest build category-service",
    "db:generate": "prisma generate",
    "db:migrate": "prisma migrate dev",
    "db:push": "prisma db push",
    "db:studio": "prisma studio",
    "db:seed": "ts-node prisma/seed.ts",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./apps/New-linen-microservice/test/jest-e2e.json"
  },
  "dependencies": {
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.1",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/microservices": "^11.1.6",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.0.1",
    "@prisma/client": "^6.15.0",
    "@types/nodemailer": "^7.0.1",
    "@types/qrcode": "^1.5.5",
    "@types/speakeasy": "^2.0.10",
    "@willsoto/nestjs-prometheus": "^6.0.2",
    "bcryptjs": "^3.0.2",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "crypto-js": "^4.2.0",
    "dotenv": "^17.2.2",
    "nodemailer": "^7.0.6",
    "otplib": "^12.0.1",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "prisma": "^6.15.0",
    "prom-client": "^15.1.3",
    "qrcode": "^1.5.4",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "speakeasy": "^2.0.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.10.7",
    "@types/bcryptjs": "^2.4.6",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.10.7",
    "@types/passport-jwt": "^4.0.1",
    "@types/supertest": "^6.0.2",
    "concurrently": "^9.2.1",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^29.7.0",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/apps/"
    ]
  }
}
